# nonlinear_calculator.py
import sys
sys.path.append('src')

def calculate_nonlinear_prizes(participants, entry_fee):
    """–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä Non-linear —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–∑–æ–≤"""
    
    # Non-linear —Ç–∞–±–ª–∏—Ü–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –∏–∑ 2.csv
    nonlinear_percentages = {
        10: [55.16, 39.84],
        11: [55.16, 39.84],
        12: [55.16, 39.84],
        13: [55.16, 39.84],
        14: [55.16, 39.84],
        15: [41.71, 30.12, 23.17],
        16: [41.71, 30.13, 23.17],
        17: [41.71, 30.12, 23.17],
        18: [41.71, 30.12, 23.17],
        19: [41.71, 30.12, 23.17],
        20: [35.62, 25.73, 19.79, 13.86],
        21: [35.62, 25.73, 19.79, 13.85],
        22: [35.63, 25.73, 19.79, 13.85],
        23: [35.63, 25.73, 19.79, 13.85],
        24: [35.62, 25.73, 19.79, 13.85],
        25: [31.38, 22.66, 17.43, 12.2, 11.33],
        26: [31.38, 22.66, 17.43, 12.2, 11.33],
        27: [31.38, 22.66, 17.43, 12.2, 11.33],
        28: [31.37, 22.66, 17.43, 12.2, 11.33],
        29: [31.38, 22.66, 17.43, 12.2, 11.33],
        30: [28.26, 20.41, 15.7, 10.99, 10.21, 9.42],
        31: [28.26, 20.41, 15.7, 10.99, 10.21, 9.42],
        32: [28.27, 20.41, 15.7, 10.99, 10.21, 9.42],
        33: [28.26, 20.41, 15.7, 10.99, 10.21, 9.42],
        34: [28.26, 20.41, 15.7, 10.99, 10.21, 9.42],
        35: [25.91, 18.71, 14.39, 10.08, 9.36, 8.64, 7.92],
        36: [25.91, 18.71, 14.39, 10.08, 9.36, 8.64, 7.92],
        37: [25.91, 18.71, 14.39, 10.08, 9.36, 8.64, 7.92],
        38: [25.91, 18.71, 14.39, 10.08, 9.36, 8.64, 7.92],
        39: [25.91, 18.71, 14.39, 10.08, 9.36, 8.64, 7.92],
        40: [24.09, 17.39, 13.38, 9.37, 8.7, 8.03, 7.36, 6.69],
        41: [24.09, 17.4, 13.38, 9.37, 8.7, 8.03, 7.36, 6.69],
        42: [24.08, 17.4, 13.38, 9.37, 8.7, 8.03, 7.36, 6.69],
        43: [24.08, 17.4, 13.38, 9.37, 8.7, 8.03, 7.36, 6.69],
        44: [24.08, 17.4, 13.38, 9.37, 8.7, 8.03, 7.36, 6.69],
        45: [22.56, 16.29, 12.53, 8.77, 8.15, 7.52, 6.89, 6.27, 6.02],
        46: [22.56, 16.29, 12.53, 8.77, 8.15, 7.52, 6.89, 6.27, 6.02],
        47: [22.56, 16.29, 12.53, 8.77, 8.15, 7.52, 6.89, 6.27, 6.01],
        48: [22.56, 16.29, 12.53, 8.77, 8.15, 7.52, 6.89, 6.27, 6.02],
        49: [22.56, 16.29, 12.53, 8.77, 8.15, 7.52, 6.89, 6.27, 6.02],
        50: [21.3, 15.38, 11.83, 8.28, 7.69, 7.1, 6.51, 5.92, 5.68, 5.32],
        51: [21.3, 15.38, 11.83, 8.28, 7.69, 7.1, 6.51, 5.92, 5.68, 5.32],
        52: [21.29, 15.38, 11.83, 8.28, 7.69, 7.1, 6.51, 5.92, 5.68, 5.32],
        53: [21.29, 15.38, 11.83, 8.28, 7.69, 7.1, 6.51, 5.92, 5.68, 5.32],
        54: [21.29, 15.38, 11.83, 8.28, 7.69, 7.1, 6.51, 5.91, 5.68, 5.32],
        55: [20.53, 14.83, 11.41, 7.98, 7.41, 6.84, 6.27, 5.7, 5.47, 5.13, 3.42],
        56: [20.53, 14.83, 11.41, 7.98, 7.41, 6.84, 6.27, 5.7, 5.48, 5.13, 3.42],
        57: [20.53, 14.83, 11.41, 7.98, 7.41, 6.84, 6.27, 5.7, 5.47, 5.13, 3.42],
        58: [20.53, 14.83, 11.41, 7.98, 7.41, 6.84, 6.27, 5.7, 5.47, 5.13, 3.42],
        59: [20.53, 14.83, 11.41, 7.98, 7.41, 6.84, 6.27, 5.7, 5.47, 5.13, 3.42],
        60: [19.86, 14.34, 11.03, 7.72, 7.17, 6.62, 6.07, 5.52, 5.3, 4.96, 3.31, 3.09],
        61: [19.86, 14.34, 11.03, 7.72, 7.17, 6.62, 6.07, 5.52, 5.3, 4.97, 3.31, 3.09],
        62: [19.86, 14.34, 11.03, 7.72, 7.17, 6.62, 6.07, 5.52, 5.3, 4.96, 3.31, 3.09],
        63: [19.86, 14.34, 11.03, 7.72, 7.17, 6.62, 6.07, 5.52, 5.3, 4.97, 3.31, 3.09],
        64: [19.86, 14.34, 11.03, 7.72, 7.17, 6.62, 6.07, 5.52, 5.3, 4.97, 3.31, 3.09],
        65: [19.28, 13.92, 10.71, 7.5, 6.96, 6.43, 5.89, 5.36, 5.14, 4.82, 3.21, 3, 2.78],
        66: [19.28, 13.92, 10.71, 7.5, 6.96, 6.43, 5.89, 5.35, 5.14, 4.82, 3.21, 3, 2.78],
        67: [19.28, 13.92, 10.71, 7.5, 6.96, 6.43, 5.89, 5.36, 5.14, 4.82, 3.21, 3, 2.79],
        68: [19.28, 13.92, 10.71, 7.5, 6.96, 6.43, 5.89, 5.35, 5.14, 4.82, 3.21, 3, 2.79],
        69: [19.28, 13.92, 10.71, 7.5, 6.96, 6.43, 5.89, 5.36, 5.14, 4.82, 3.21, 3, 2.78],
        70: [18.77, 13.56, 10.43, 7.3, 6.78, 6.26, 5.74, 5.21, 5.01, 4.69, 3.13, 2.92, 2.71, 2.5],
        71: [18.77, 13.56, 10.43, 7.3, 6.78, 6.26, 5.74, 5.21, 5.01, 4.69, 3.13, 2.92, 2.71, 2.5],
        72: [18.77, 13.56, 10.43, 7.3, 6.78, 6.26, 5.74, 5.21, 5.01, 4.69, 3.13, 2.92, 2.71, 2.5],
        73: [18.77, 13.56, 10.43, 7.3, 6.78, 6.26, 5.74, 5.21, 5.01, 4.69, 3.13, 2.92, 2.71, 2.5],
        74: [18.77, 13.56, 10.43, 7.3, 6.78, 6.26, 5.74, 5.21, 5.01, 4.69, 3.13, 2.92, 2.71, 2.5],
        75: [18.33, 13.24, 10.18, 7.13, 6.62, 6.11, 5.6, 5.09, 4.89, 4.58, 3.05, 2.85, 2.65, 2.44, 2.24],
        76: [18.33, 13.24, 10.18, 7.13, 6.62, 6.11, 5.6, 5.09, 4.89, 4.58, 3.06, 2.85, 2.65, 2.44, 2.24],
        77: [18.33, 13.24, 10.18, 7.13, 6.62, 6.11, 5.6, 5.09, 4.89, 4.58, 3.05, 2.85, 2.65, 2.44, 2.24],
        78: [18.33, 13.24, 10.18, 7.13, 6.62, 6.11, 5.6, 5.09, 4.89, 4.58, 3.06, 2.85, 2.65, 2.44, 2.24],
        79: [18.33, 13.24, 10.18, 7.13, 6.62, 6.11, 5.6, 5.09, 4.89, 4.58, 3.05, 2.85, 2.65, 2.44, 2.24],
        80: [17.94, 12.96, 9.97, 6.98, 6.48, 5.98, 5.48, 4.98, 4.79, 4.49, 2.99, 2.79, 2.59, 2.39, 2.19, 1.99],
        81: [17.94, 12.96, 9.97, 6.98, 6.48, 5.98, 5.48, 4.98, 4.79, 4.49, 2.99, 2.79, 2.59, 2.39, 2.19, 1.99],
        82: [17.94, 12.96, 9.97, 6.98, 6.48, 5.98, 5.48, 4.98, 4.79, 4.49, 2.99, 2.79, 2.59, 2.39, 2.19, 1.99],
        83: [17.94, 12.96, 9.97, 6.98, 6.48, 5.98, 5.48, 4.98, 4.78, 4.49, 2.99, 2.79, 2.59, 2.39, 2.19, 1.99],
        84: [17.94, 12.96, 9.97, 6.98, 6.48, 5.98, 5.48, 4.98, 4.78, 4.49, 2.99, 2.79, 2.59, 2.39, 2.19, 1.99],
        85: [17.61, 12.72, 9.78, 6.85, 6.36, 5.87, 5.38, 4.89, 4.7, 4.4, 2.94, 2.74, 2.54, 2.35, 2.15, 1.96, 1.76],
        86: [17.61, 12.72, 9.78, 6.85, 6.36, 5.87, 5.38, 4.89, 4.7, 4.4, 2.93, 2.74, 2.54, 2.35, 2.15, 1.96, 1.76],
        87: [17.61, 12.72, 9.78, 6.85, 6.36, 5.87, 5.38, 4.89, 4.7, 4.4, 2.94, 2.74, 2.54, 2.35, 2.15, 1.96, 1.76],
        88: [17.61, 12.72, 9.78, 6.85, 6.36, 5.87, 5.38, 4.89, 4.7, 4.4, 2.94, 2.74, 2.54, 2.35, 2.15, 1.96, 1.76],
        89: [17.61, 12.72, 9.78, 6.85, 6.36, 5.87, 5.38, 4.89, 4.7, 4.4, 2.93, 2.74, 2.54, 2.35, 2.15, 1.96, 1.76],
        90: [17.31, 12.5, 9.62, 6.73, 6.25, 5.77, 5.29, 4.81, 4.62, 4.33, 2.88, 2.69, 2.5, 2.31, 2.12, 1.92, 1.73, 1.63],
        91: [17.31, 12.5, 9.62, 6.73, 6.25, 5.77, 5.29, 4.81, 4.62, 4.33, 2.88, 2.69, 2.5, 2.31, 2.12, 1.92, 1.73, 1.64],
        92: [17.31, 12.5, 9.62, 6.73, 6.25, 5.77, 5.29, 4.81, 4.62, 4.33, 2.88, 2.69, 2.5, 2.31, 2.12, 1.92, 1.73, 1.63],
        93: [17.31, 12.5, 9.62, 6.73, 6.25, 5.77, 5.29, 4.81, 4.62, 4.33, 2.88, 2.69, 2.5, 2.31, 2.12, 1.92, 1.73, 1.63],
        94: [17.31, 12.5, 9.61, 6.73, 6.25, 5.77, 5.29, 4.81, 4.61, 4.33, 2.89, 2.69, 2.5, 2.31, 2.11, 1.92, 1.73, 1.64],
        95: [17.03, 12.3, 9.46, 6.62, 6.15, 5.68, 5.2, 4.73, 4.54, 4.26, 2.84, 2.65, 2.46, 2.27, 2.08, 1.89, 1.7, 1.61, 1.51],
        96: [17.03, 12.3, 9.46, 6.62, 6.15, 5.68, 5.2, 4.73, 4.54, 4.26, 2.84, 2.65, 2.46, 2.27, 2.08, 1.89, 1.7, 1.61, 1.51],
        97: [17.03, 12.3, 9.46, 6.62, 6.15, 5.68, 5.2, 4.73, 4.54, 4.26, 2.84, 2.65, 2.46, 2.27, 2.08, 1.89, 1.7, 1.61, 1.51],
        98: [17.03, 12.3, 9.46, 6.62, 6.15, 5.68, 5.2, 4.73, 4.54, 4.26, 2.84, 2.65, 2.46, 2.27, 2.08, 1.89, 1.7, 1.61, 1.51],
        99: [17.03, 12.3, 9.46, 6.62, 6.15, 5.68, 5.2, 4.73, 4.54, 4.26, 2.84, 2.65, 2.46, 2.27, 2.08, 1.89, 1.7, 1.61, 1.51],
        100: [16.78, 12.12, 9.32, 6.53, 6.06, 5.59, 5.13, 4.66, 4.47, 4.2, 2.8, 2.61, 2.42, 2.24, 2.05, 1.86, 1.68, 1.58, 1.49, 1.4]
    }
    
    # –ë–∞–∑–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã
    total_pool = participants * entry_fee
    our_commission = total_pool * 0.05
    prize_pool = total_pool - our_commission
    prize_places = max(2, int(participants * 0.2))
    
    print(f"üí∞ NON-LINEAR –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –ü–†–ò–ó–û–í")
    print(f"–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {participants}")
    print(f"–í–∑–Ω–æ—Å: ${entry_fee}")
    print(f"–û–±—â–∏–π —Ñ–æ–Ω–¥: ${total_pool}")
    print(f"–ù–∞—à–∞ –∫–æ–º–∏—Å—Å–∏—è (5%): ${our_commission}")
    print(f"–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: ${prize_pool}")
    print(f"–ü—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç: {prize_places}")
    print("-" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if participants in nonlinear_percentages:
        percentages = nonlinear_percentages[participants]
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è {participants} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    else:
        print(f"‚ö†Ô∏è –¢–æ—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –Ω–µ—Ç, –∏—â–µ–º –±–ª–∏–∂–∞–π—à—É—é...")
        return
    
    print("\nüìä NON-LINEAR –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï:")
    for i in range(min(prize_places, len(percentages))):
        percentage = percentages[i]
        amount = int(total_pool * (percentage / 100) * 100) / 100
        print(f"{i+1:2d} –º–µ—Å—Ç–æ: ${amount:7.2f} ({percentage}%)")

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï NON-LINEAR –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: 100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    calculate_nonlinear_prizes(100, 10)
    print("\n" + "=" * 60)
    
    # –¢–µ—Å—Ç 2: 25 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤  
    calculate_nonlinear_prizes(25, 10)
    print("\n" + "=" * 60)
    
    # –¢–µ—Å—Ç 3: 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    calculate_nonlinear_prizes(50, 10)
    print("\n" + "=" * 60)